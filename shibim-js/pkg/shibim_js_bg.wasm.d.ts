/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export function __wbg_parsingerror_free(a: number): void;
export function __wbg_get_parsingerror_line(a: number): number;
export function __wbg_set_parsingerror_line(a: number, b: number): void;
export function __wbg_get_parsingerror_from(a: number): number;
export function __wbg_set_parsingerror_from(a: number, b: number): void;
export function __wbg_get_parsingerror_to(a: number): number;
export function __wbg_set_parsingerror_to(a: number, b: number): void;
export function __wbg_shb_return_free(a: number): void;
export function __wbg_shb_full_return_free(a: number): void;
export function __wbg_get_shb_full_return_errors(a: number): number;
export function __wbg_set_shb_full_return_errors(a: number, b: number): void;
export function __wbg_shb_db_return_free(a: number): void;
export function __wbg_get_shb_db_return_sections(a: number, b: number): void;
export function __wbg_set_shb_db_return_sections(a: number, b: number, c: number): void;
export function __wbg_get_shb_db_return_title(a: number, b: number): void;
export function __wbg_set_shb_db_return_title(a: number, b: number, c: number): void;
export function __wbg_get_shb_db_return_norm_title(a: number, b: number): void;
export function __wbg_set_shb_db_return_norm_title(a: number, b: number, c: number): void;
export function __wbg_get_shb_db_return_subtitle(a: number, b: number): void;
export function __wbg_set_shb_db_return_subtitle(a: number, b: number, c: number): void;
export function __wbg_get_shb_db_return_tonic(a: number): number;
export function __wbg_set_shb_db_return_tonic(a: number, b: number): void;
export function __wbg_get_shb_db_return_tonic_kind(a: number): number;
export function __wbg_set_shb_db_return_tonic_kind(a: number, b: number): void;
export function __wbg_lst_return_free(a: number): void;
export function __wbg_get_lst_return_content(a: number, b: number): void;
export function __wbg_set_lst_return_content(a: number, b: number, c: number): void;
export function __wbg_get_lst_return_s_errors(a: number): number;
export function __wbg_set_lst_return_s_errors(a: number, b: number): void;
export function __wbg_get_lst_return_l_errors(a: number): number;
export function __wbg_set_lst_return_l_errors(a: number, b: number): void;
export function shb_to_html(a: number, b: number): number;
export function shb_to_html_db(a: number, b: number): number;
export function shb_to_db_info(a: number, b: number): number;
export function lst_to_html(a: number, b: number): number;
export function lst_to_array(a: number, b: number): number;
export function __wbg_set_shb_return_content(a: number, b: number, c: number): void;
export function __wbg_set_shb_full_return_content(a: number, b: number, c: number): void;
export function __wbg_set_shb_db_return_plain(a: number, b: number, c: number): void;
export function __wbg_set_shb_full_return_plain(a: number, b: number, c: number): void;
export function __wbg_set_shb_full_return_sections(a: number, b: number, c: number): void;
export function __wbg_set_parsingerror_message(a: number, b: number, c: number): void;
export function __wbg_get_shb_return_content(a: number, b: number): void;
export function __wbg_get_shb_full_return_content(a: number, b: number): void;
export function __wbg_get_shb_db_return_plain(a: number, b: number): void;
export function __wbg_get_shb_full_return_plain(a: number, b: number): void;
export function __wbg_get_shb_full_return_sections(a: number, b: number): void;
export function __wbg_get_parsingerror_message(a: number, b: number): void;
export function __wbg_get_shb_return_errors(a: number): number;
export function __wbg_set_shb_return_errors(a: number, b: number): void;
export function __wbindgen_malloc(a: number, b: number): number;
export function __wbindgen_realloc(a: number, b: number, c: number, d: number): number;
export const __wbindgen_export_2: WebAssembly.Table;
export function _dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h6b49fc002d773d6d(a: number, b: number, c: number): void;
export function __wbindgen_add_to_stack_pointer(a: number): number;
export function __wbindgen_free(a: number, b: number, c: number): void;
export function __wbindgen_exn_store(a: number): void;
export function wasm_bindgen__convert__closures__invoke2_mut__h4741b0a938afd585(a: number, b: number, c: number, d: number): void;
